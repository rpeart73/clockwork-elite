{"version":3,"file":"index-CDRMdQO-.js","sources":["../../node_modules/react-dom/client.js","../../node_modules/zustand/esm/vanilla.mjs","../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.js","../../node_modules/use-sync-external-store/shim/index.js","../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.js","../../node_modules/use-sync-external-store/shim/with-selector.js","../../node_modules/zustand/esm/index.mjs","../../node_modules/zustand/esm/middleware.mjs","../../src/modules/date-extraction.ts","../../src/modules/poc-consolidation.ts","../../src/modules/input-sanitization.ts","../../src/store/app-store.ts","../../src/components/Header.tsx","../../src/components/InputPanel.tsx","../../src/utils/debounce.ts","../../src/components/POCDisplay.tsx","../../src/components/FormFields.tsx","../../src/components/AnalysisPanel.tsx","../../src/components/OutputModal.tsx","../../src/components/ContextModal.tsx","../../src/components/ErrorBoundary.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const getInitialState = () => initialState;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const destroy = () => {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.\"\n      );\n    }\n    listeners.clear();\n  };\n  const api = { setState, getState, getInitialState, subscribe, destroy };\n  const initialState = state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\nvar vanilla = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use import { createStore } from 'zustand/vanilla'.\"\n    );\n  }\n  return createStore(createState);\n};\n\nexport { createStore, vanilla as default };\n","/**\n * @license React\n * use-sync-external-store-shim.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\");\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is,\n  useState = React.useState,\n  useEffect = React.useEffect,\n  useLayoutEffect = React.useLayoutEffect,\n  useDebugValue = React.useDebugValue;\nfunction useSyncExternalStore$2(subscribe, getSnapshot) {\n  var value = getSnapshot(),\n    _useState = useState({ inst: { value: value, getSnapshot: getSnapshot } }),\n    inst = _useState[0].inst,\n    forceUpdate = _useState[1];\n  useLayoutEffect(\n    function () {\n      inst.value = value;\n      inst.getSnapshot = getSnapshot;\n      checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n    },\n    [subscribe, value, getSnapshot]\n  );\n  useEffect(\n    function () {\n      checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n      return subscribe(function () {\n        checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n      });\n    },\n    [subscribe]\n  );\n  useDebugValue(value);\n  return value;\n}\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  inst = inst.value;\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(inst, nextValue);\n  } catch (error) {\n    return !0;\n  }\n}\nfunction useSyncExternalStore$1(subscribe, getSnapshot) {\n  return getSnapshot();\n}\nvar shim =\n  \"undefined\" === typeof window ||\n  \"undefined\" === typeof window.document ||\n  \"undefined\" === typeof window.document.createElement\n    ? useSyncExternalStore$1\n    : useSyncExternalStore$2;\nexports.useSyncExternalStore =\n  void 0 !== React.useSyncExternalStore ? React.useSyncExternalStore : shim;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n","/**\n * @license React\n * use-sync-external-store-shim/with-selector.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\"),\n  shim = require(\"use-sync-external-store/shim\");\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is,\n  useSyncExternalStore = shim.useSyncExternalStore,\n  useRef = React.useRef,\n  useEffect = React.useEffect,\n  useMemo = React.useMemo,\n  useDebugValue = React.useDebugValue;\nexports.useSyncExternalStoreWithSelector = function (\n  subscribe,\n  getSnapshot,\n  getServerSnapshot,\n  selector,\n  isEqual\n) {\n  var instRef = useRef(null);\n  if (null === instRef.current) {\n    var inst = { hasValue: !1, value: null };\n    instRef.current = inst;\n  } else inst = instRef.current;\n  instRef = useMemo(\n    function () {\n      function memoizedSelector(nextSnapshot) {\n        if (!hasMemo) {\n          hasMemo = !0;\n          memoizedSnapshot = nextSnapshot;\n          nextSnapshot = selector(nextSnapshot);\n          if (void 0 !== isEqual && inst.hasValue) {\n            var currentSelection = inst.value;\n            if (isEqual(currentSelection, nextSnapshot))\n              return (memoizedSelection = currentSelection);\n          }\n          return (memoizedSelection = nextSnapshot);\n        }\n        currentSelection = memoizedSelection;\n        if (objectIs(memoizedSnapshot, nextSnapshot)) return currentSelection;\n        var nextSelection = selector(nextSnapshot);\n        if (void 0 !== isEqual && isEqual(currentSelection, nextSelection))\n          return (memoizedSnapshot = nextSnapshot), currentSelection;\n        memoizedSnapshot = nextSnapshot;\n        return (memoizedSelection = nextSelection);\n      }\n      var hasMemo = !1,\n        memoizedSnapshot,\n        memoizedSelection,\n        maybeGetServerSnapshot =\n          void 0 === getServerSnapshot ? null : getServerSnapshot;\n      return [\n        function () {\n          return memoizedSelector(getSnapshot());\n        },\n        null === maybeGetServerSnapshot\n          ? void 0\n          : function () {\n              return memoizedSelector(maybeGetServerSnapshot());\n            }\n      ];\n    },\n    [getSnapshot, getServerSnapshot, selector, isEqual]\n  );\n  var value = useSyncExternalStore(subscribe, instRef[0], instRef[1]);\n  useEffect(\n    function () {\n      inst.hasValue = !0;\n      inst.value = value;\n    },\n    [value]\n  );\n  useDebugValue(value);\n  return value;\n};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.production.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.development.js');\n}\n","import { createStore } from 'zustand/vanilla';\nexport * from 'zustand/vanilla';\nimport ReactExports from 'react';\nimport useSyncExternalStoreExports from 'use-sync-external-store/shim/with-selector.js';\n\nconst { useDebugValue } = ReactExports;\nconst { useSyncExternalStoreWithSelector } = useSyncExternalStoreExports;\nlet didWarnAboutEqualityFn = false;\nconst identity = (arg) => arg;\nfunction useStore(api, selector = identity, equalityFn) {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && equalityFn && !didWarnAboutEqualityFn) {\n    console.warn(\n      \"[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937\"\n    );\n    didWarnAboutEqualityFn = true;\n  }\n  const slice = useSyncExternalStoreWithSelector(\n    api.subscribe,\n    api.getState,\n    api.getServerState || api.getInitialState,\n    selector,\n    equalityFn\n  );\n  useDebugValue(slice);\n  return slice;\n}\nconst createImpl = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && typeof createState !== \"function\") {\n    console.warn(\n      \"[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.\"\n    );\n  }\n  const api = typeof createState === \"function\" ? createStore(createState) : createState;\n  const useBoundStore = (selector, equalityFn) => useStore(api, selector, equalityFn);\n  Object.assign(useBoundStore, api);\n  return useBoundStore;\n};\nconst create = (createState) => createState ? createImpl(createState) : createImpl;\nvar react = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use `import { create } from 'zustand'`.\"\n    );\n  }\n  return create(createState);\n};\n\nexport { create, react as default, useStore };\n","const reduxImpl = (reducer, initial) => (set, _get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return { dispatch: (...a) => api.dispatch(...a), ...initial };\n};\nconst redux = reduxImpl;\n\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name) => {\n  const api = trackedConnections.get(name);\n  if (!api) return {};\n  return Object.fromEntries(\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\n  );\n};\nconst extractConnectionInformation = (store, extensionConnector, options) => {\n  if (store === void 0) {\n    return {\n      type: \"untracked\",\n      connection: extensionConnector.connect(options)\n    };\n  }\n  const existingConnection = trackedConnections.get(options.name);\n  if (existingConnection) {\n    return { type: \"tracked\", store, ...existingConnection };\n  }\n  const newConnection = {\n    connection: extensionConnector.connect(options),\n    stores: {}\n  };\n  trackedConnections.set(options.name, newConnection);\n  return { type: \"tracked\", store, ...newConnection };\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n  let extensionConnector;\n  try {\n    extensionConnector = (enabled != null ? enabled : (import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch (_e) {\n  }\n  if (!extensionConnector) {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && enabled) {\n      console.warn(\n        \"[zustand devtools middleware] Please install/enable Redux devtools extension\"\n      );\n    }\n    return fn(set, get, api);\n  }\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n  let isRecording = true;\n  api.setState = (state, replace, nameOrAction) => {\n    const r = set(state, replace);\n    if (!isRecording) return r;\n    const action = nameOrAction === void 0 ? { type: anonymousActionType || \"anonymous\" } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\n    if (store === void 0) {\n      connection == null ? void 0 : connection.send(action, get());\n      return r;\n    }\n    connection == null ? void 0 : connection.send(\n      {\n        ...action,\n        type: `${store}/${action.type}`\n      },\n      {\n        ...getTrackedConnectionState(options.name),\n        [store]: api.getState()\n      }\n    );\n    return r;\n  };\n  const setStateFromDevtools = (...a) => {\n    const originalIsRecording = isRecording;\n    isRecording = false;\n    set(...a);\n    isRecording = originalIsRecording;\n  };\n  const initialState = fn(api.setState, get, api);\n  if (connectionInformation.type === \"untracked\") {\n    connection == null ? void 0 : connection.init(initialState);\n  } else {\n    connectionInformation.stores[connectionInformation.store] = api;\n    connection == null ? void 0 : connection.init(\n      Object.fromEntries(\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\n          key,\n          key === connectionInformation.store ? initialState : store2.getState()\n        ])\n      )\n    );\n  }\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n    let didWarnAboutReservedActionType = false;\n    const originalDispatch = api.dispatch;\n    api.dispatch = (...a) => {\n      if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && a[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n        console.warn(\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\n        );\n        didWarnAboutReservedActionType = true;\n      }\n      originalDispatch(...a);\n    };\n  }\n  connection.subscribe((message) => {\n    var _a;\n    switch (message.type) {\n      case \"ACTION\":\n        if (typeof message.payload !== \"string\") {\n          console.error(\n            \"[zustand devtools middleware] Unsupported action format\"\n          );\n          return;\n        }\n        return parseJsonThen(\n          message.payload,\n          (action) => {\n            if (action.type === \"__setState\") {\n              if (store === void 0) {\n                setStateFromDevtools(action.state);\n                return;\n              }\n              if (Object.keys(action.state).length !== 1) {\n                console.error(\n                  `\n                    [zustand devtools middleware] Unsupported __setState action format. \n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `\n                );\n              }\n              const stateFromDevtools = action.state[store];\n              if (stateFromDevtools === void 0 || stateFromDevtools === null) {\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                setStateFromDevtools(stateFromDevtools);\n              }\n              return;\n            }\n            if (!api.dispatchFromDevtools) return;\n            if (typeof api.dispatch !== \"function\") return;\n            api.dispatch(action);\n          }\n        );\n      case \"DISPATCH\":\n        switch (message.payload.type) {\n          case \"RESET\":\n            setStateFromDevtools(initialState);\n            if (store === void 0) {\n              return connection == null ? void 0 : connection.init(api.getState());\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"COMMIT\":\n            if (store === void 0) {\n              connection == null ? void 0 : connection.init(api.getState());\n              return;\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"ROLLBACK\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                connection == null ? void 0 : connection.init(api.getState());\n                return;\n              }\n              setStateFromDevtools(state[store]);\n              connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n            });\n          case \"JUMP_TO_STATE\":\n          case \"JUMP_TO_ACTION\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                setStateFromDevtools(state[store]);\n              }\n            });\n          case \"IMPORT_STATE\": {\n            const { nextLiftedState } = message.payload;\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a.state;\n            if (!lastComputedState) return;\n            if (store === void 0) {\n              setStateFromDevtools(lastComputedState);\n            } else {\n              setStateFromDevtools(lastComputedState[store]);\n            }\n            connection == null ? void 0 : connection.send(\n              null,\n              // FIXME no-any\n              nextLiftedState\n            );\n            return;\n          }\n          case \"PAUSE_RECORDING\":\n            return isRecording = !isRecording;\n        }\n        return;\n    }\n  });\n  return initialState;\n};\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, f) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\n      \"[zustand devtools middleware] Could not parse the received json\",\n      e\n    );\n  }\n  if (parsed !== void 0) f(parsed);\n};\n\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = (selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? void 0 : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  };\n  const initialState = fn(set, get, api);\n  return initialState;\n};\nconst subscribeWithSelector = subscribeWithSelectorImpl;\n\nconst combine = (initialState, create) => (...a) => Object.assign({}, initialState, create(...a));\n\nfunction createJSONStorage(getStorage, options) {\n  let storage;\n  try {\n    storage = getStorage();\n  } catch (_e) {\n    return;\n  }\n  const persistStorage = {\n    getItem: (name) => {\n      var _a;\n      const parse = (str2) => {\n        if (str2 === null) {\n          return null;\n        }\n        return JSON.parse(str2, options == null ? void 0 : options.reviver);\n      };\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\n      if (str instanceof Promise) {\n        return str.then(parse);\n      }\n      return parse(str);\n    },\n    setItem: (name, newValue) => storage.setItem(\n      name,\n      JSON.stringify(newValue, options == null ? void 0 : options.replacer)\n    ),\n    removeItem: (name) => storage.removeItem(name)\n  };\n  return persistStorage;\n}\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst oldImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    getStorage: () => localStorage,\n    serialize: JSON.stringify,\n    deserialize: JSON.parse,\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage;\n  try {\n    storage = options.getStorage();\n  } catch (_e) {\n  }\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const thenableSerialize = toThenable(options.serialize);\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    let errorInSync;\n    const thenable = thenableSerialize({ state, version: options.version }).then(\n      (serializedValue) => storage.setItem(options.name, serializedValue)\n    ).catch((e) => {\n      errorInSync = e;\n    });\n    if (errorInSync) {\n      throw errorInSync;\n    }\n    return thenable;\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a;\n    if (!storage) return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => cb(get()));\n    const postRehydrationCallback = ((_a = options.onRehydrateStorage) == null ? void 0 : _a.call(options, get())) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((storageValue) => {\n      if (storageValue) {\n        return options.deserialize(storageValue);\n      }\n    }).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.getStorage) {\n        storage = newOptions.getStorage();\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  hydrate();\n  return stateFromStorage || configResult;\n};\nconst newImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    storage: createJSONStorage(() => localStorage),\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage = options.storage;\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    return storage.setItem(options.name, {\n      state,\n      version: options.version\n    });\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  api.getInitialState = () => configResult;\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a, _b;\n    if (!storage) return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => {\n      var _a2;\n      return cb((_a2 = get()) != null ? _a2 : configResult);\n    });\n    const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? void 0 : _b.call(options, (_a = get()) != null ? _a : configResult)) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return [\n              true,\n              options.migrate(\n                deserializedStorageValue.state,\n                deserializedStorageValue.version\n              )\n            ];\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return [false, deserializedStorageValue.state];\n        }\n      }\n      return [false, void 0];\n    }).then((migrationResult) => {\n      var _a2;\n      const [migrated, migratedState] = migrationResult;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      if (migrated) {\n        return setItem();\n      }\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      stateFromStorage = get();\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.storage) {\n        storage = newOptions.storage;\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  if (!options.skipHydration) {\n    hydrate();\n  }\n  return stateFromStorage || configResult;\n};\nconst persistImpl = (config, baseOptions) => {\n  if (\"getStorage\" in baseOptions || \"serialize\" in baseOptions || \"deserialize\" in baseOptions) {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead.\"\n      );\n    }\n    return oldImpl(config, baseOptions);\n  }\n  return newImpl(config, baseOptions);\n};\nconst persist = persistImpl;\n\nexport { combine, createJSONStorage, devtools, persist, redux, subscribeWithSelector };\n","import { format, isValid, addDays, addMonths, startOfDay } from 'date-fns';\n\n/**\n * Date extraction module - REAL WORKING CODE from the original implementation\n * This handles all the date parsing logic that was proven to work\n */\n\nexport interface ExtractedDate {\n  date: Date;\n  formatted: string;\n  context: string;\n  isLastDate?: boolean;\n}\n\nexport class DateExtractor {\n  private static readonly HEADER_PATTERNS = [\n    /(?:Sent|Date):\\s*(\\w+,\\s+\\w+\\s+\\d{1,2},\\s+\\d{4})/gi,\n    /(?:Sent|Date):\\s*(\\w+\\s+\\d{1,2},\\s+\\d{4})/gi,\n    /(?:Sent|Date):\\s*(\\w+,\\s+\\d{1,2}[/-]\\d{1,2}[/-]\\d{4})/gi,\n    /(?:Sent|Date):\\s*(\\w+,\\s+\\w+\\s+\\d{1,2},\\s+\\d{4}\\s+\\d{1,2}:\\d{2})/gi,\n    /(?:On|From).*?(?:Sent|Date):\\s*(\\w+,\\s+\\w+\\s+\\d{1,2},\\s+\\d{4})/gi\n  ];\n\n  /**\n   * Extracts dates ONLY from email headers - exactly as working in original\n   */\n  static extractDates(content: string): ExtractedDate[] {\n    const dates: ExtractedDate[] = [];\n    const uniqueDates = new Set<string>();\n\n    // First check for manually entered last date\n    const lastDateMatch = content.match(/\\[Last date in response:\\s*([^\\]]+)\\]/i);\n    if (lastDateMatch) {\n      const dateStr = lastDateMatch[1]?.trim() || '';\n      const parsed = this.parseDate(dateStr);\n      if (parsed) {\n        dates.push({\n          date: parsed,\n          formatted: this.formatDate(parsed),\n          context: `Last response: ${dateStr}`,\n          isLastDate: true\n        });\n        console.log('Parsed last date:', dateStr, '→', this.formatDate(parsed));\n      } else {\n        console.log('Failed to parse last date:', dateStr);\n      }\n    }\n\n    // Extract from email headers only\n    this.HEADER_PATTERNS.forEach(pattern => {\n      const matches = content.matchAll(pattern);\n      for (const match of matches) {\n        const dateStr = match[1] || '';\n        const parsed = this.parseDate(dateStr);\n        if (parsed) {\n          const dateKey = this.formatDate(parsed);\n          if (!uniqueDates.has(dateKey)) {\n            uniqueDates.add(dateKey);\n            dates.push({\n              date: parsed,\n              formatted: dateKey,\n              context: `Email header: ${dateStr}`\n            });\n            console.log('Added header date:', dateStr, '→', dateKey);\n          }\n        }\n      }\n    });\n\n    return dates;\n  }\n\n  /**\n   * Parse date with all the flexibility from the original implementation\n   */\n  static parseDate(dateStr: string): Date | null {\n    const today = new Date();\n    const currentYear = today.getFullYear();\n    const currentMonth = today.getMonth();\n    \n    // Handle relative dates\n    const lowerStr = dateStr.toLowerCase().trim();\n    if (lowerStr === 'today') return today;\n    if (lowerStr === 'yesterday') {\n      return addDays(today, -1);\n    }\n    if (lowerStr === 'tomorrow') {\n      return addDays(today, 1);\n    }\n    \n    // Handle day names (Monday, Tuesday, etc.)\n    const dayNames = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\n    const dayIndex = dayNames.indexOf(lowerStr);\n    if (dayIndex >= 0) {\n      const todayDay = today.getDay();\n      let daysToAdd = dayIndex - todayDay;\n      if (daysToAdd <= 0) daysToAdd += 7;\n      return addDays(today, daysToAdd);\n    }\n    \n    // Handle \"next Monday\", \"last Friday\"\n    const nextLastMatch = dateStr.match(/^(next|last)\\s+(\\w+day)$/i);\n    if (nextLastMatch && nextLastMatch[1] && nextLastMatch[2]) {\n      const day = nextLastMatch[2].toLowerCase();\n      const dayIdx = dayNames.indexOf(day);\n      if (dayIdx >= 0) {\n        const todayDay = today.getDay();\n        if (nextLastMatch[1].toLowerCase() === 'next') {\n          const daysToAdd = (dayIdx - todayDay + 7) % 7 || 7;\n          return addDays(today, daysToAdd);\n        } else { // last\n          const daysToSubtract = (todayDay - dayIdx + 7) % 7 || 7;\n          return addDays(today, -daysToSubtract);\n        }\n      }\n    }\n    \n    // Handle \"the 15th\", \"the 3rd\"\n    const ordinalMatch = dateStr.match(/^(?:the\\s+)?(\\d{1,2})(?:st|nd|rd|th)?$/i);\n    if (ordinalMatch) {\n      const day = parseInt(ordinalMatch[1] || '0');\n      if (day >= 1 && day <= 31) {\n        let result = new Date(currentYear, currentMonth, day);\n        // If the day has already passed this month, assume next month\n        if (result < today) {\n          result = addMonths(result, 1);\n        }\n        return startOfDay(result);\n      }\n    }\n    \n    // Handle \"January 15\", \"Jan 30\", etc. without year\n    const monthDayMatch = dateStr.match(/^(\\w+)\\s+(\\d{1,2})(?:st|nd|rd|th)?$/i);\n    if (monthDayMatch) {\n      const monthStr = monthDayMatch[1] || '';\n      const day = parseInt(monthDayMatch[2] || '0');\n      const monthNames = ['january', 'february', 'march', 'april', 'may', 'june', \n                         'july', 'august', 'september', 'october', 'november', 'december'];\n      const monthAbbr = ['jan', 'feb', 'mar', 'apr', 'may', 'jun', \n                        'jul', 'aug', 'sep', 'oct', 'nov', 'dec'];\n      \n      let monthIndex = monthNames.indexOf(monthStr.toLowerCase());\n      if (monthIndex === -1) {\n        monthIndex = monthAbbr.indexOf(monthStr.toLowerCase().substring(0, 3));\n      }\n      \n      if (monthIndex >= 0 && day >= 1 && day <= 31) {\n        let result = new Date(currentYear, monthIndex, day);\n        // If the date has passed this year, assume next year\n        if (result < today) {\n          result = new Date(currentYear + 1, monthIndex, day);\n        }\n        return startOfDay(result);\n      }\n    }\n    \n    // Handle MM/DD or MM-DD format (without year)\n    const monthDaySlashMatch = dateStr.match(/^(\\d{1,2})[/-](\\d{1,2})$/);\n    if (monthDaySlashMatch) {\n      const month = parseInt(monthDaySlashMatch[1] || '1') - 1; // 0-indexed\n      const day = parseInt(monthDaySlashMatch[2] || '1');\n      if (month >= 0 && month <= 11 && day >= 1 && day <= 31) {\n        let result = new Date(currentYear, month, day);\n        // If the date has passed this year, assume next year\n        if (result < today) {\n          result = new Date(currentYear + 1, month, day);\n        }\n        return startOfDay(result);\n      }\n    }\n    \n    // Handle special phrases\n    if (dateStr.match(/end\\s+of\\s+(?:the\\s+)?week/i)) {\n      const dayOfWeek = today.getDay();\n      const daysUntilFriday = (5 - dayOfWeek + 7) % 7 || 7;\n      return addDays(today, daysUntilFriday);\n    }\n    \n    if (dateStr.match(/end\\s+of\\s+(?:the\\s+)?month/i)) {\n      return new Date(currentYear, currentMonth + 1, 0); // Last day of current month\n    }\n    \n    if (dateStr.match(/beginning\\s+of\\s+(?:next\\s+)?week/i)) {\n      const dayOfWeek = today.getDay();\n      const daysUntilMonday = (8 - dayOfWeek) % 7 || 7;\n      return addDays(today, daysUntilMonday);\n    }\n    \n    if (dateStr.match(/beginning\\s+of\\s+(?:next\\s+)?month/i)) {\n      return new Date(currentYear, currentMonth + 1, 1); // First day of next month\n    }\n    \n    // Try standard date parsing as fallback\n    try {\n      const parsed = new Date(dateStr);\n      if (isValid(parsed)) {\n        return startOfDay(parsed);\n      }\n    } catch (e) {\n      // Invalid date\n    }\n    \n    return null;\n  }\n\n  /**\n   * Format date consistently\n   */\n  static formatDate(date: Date): string {\n    return format(date, 'MMMM d, yyyy');\n  }\n\n  /**\n   * Check if content has the last date marker\n   */\n  static hasLastDateMarker(content: string): boolean {\n    return content.includes('[Last date in response:');\n  }\n}","/**\n * POC Consolidation Module - Real working logic from original implementation\n * Handles the rule: Same day = 1 POC, different days = multiple POCs\n */\n\nimport { ExtractedDate } from './date-extraction';\n\nexport interface PointOfContact {\n  id: string;\n  date: Date;\n  dateStr: string;\n  type: 'email' | 'meeting' | 'call' | 'pending';\n  context: string;\n  content: string;\n  selected: boolean;\n  isLastDate?: boolean;\n  exchanges?: number;\n  combinedContext?: string[];\n}\n\nexport class POCConsolidator {\n  /**\n   * Consolidates POCs based on the rule: same day = 1 POC with multiple exchanges\n   */\n  static consolidate(\n    dates: ExtractedDate[], \n    content: string,\n    hasLastDate: boolean\n  ): PointOfContact[] {\n    // If no last date yet, return pending POC\n    if (!hasLastDate) {\n      return [{\n        id: Date.now().toString(),\n        date: new Date(),\n        dateStr: 'Waiting for last date...',\n        type: 'pending',\n        context: 'Please wait for the last date prompt',\n        content: content,\n        selected: false\n      }];\n    }\n\n    // Convert dates to POCs\n    const pocs: PointOfContact[] = dates.map((date, index) => ({\n      id: `${Date.now()}-${index}`,\n      date: date.date,\n      dateStr: date.formatted,\n      type: 'email' as const,\n      context: date.context,\n      content: content,\n      selected: true,\n      isLastDate: date.isLastDate || false\n    }));\n\n    // Consolidate by date\n    const pocsByDate = new Map<string, PointOfContact>();\n    \n    pocs.forEach(poc => {\n      const dateKey = poc.dateStr;\n      \n      if (!pocsByDate.has(dateKey)) {\n        pocsByDate.set(dateKey, {\n          ...poc,\n          exchanges: 1,\n          combinedContext: [poc.context]\n        });\n      } else {\n        // Same date - combine into one POC\n        const existing = pocsByDate.get(dateKey)!;\n        existing.exchanges = (existing.exchanges || 1) + 1;\n        existing.combinedContext = [...(existing.combinedContext || []), poc.context];\n        \n        // Update type if more specific (this logic was in original)\n        if (poc.type !== 'email' && existing.type === 'email') {\n          existing.type = poc.type;\n        }\n      }\n    });\n\n    // Convert back to array and format\n    const consolidated = Array.from(pocsByDate.values()).map(poc => ({\n      ...poc,\n      context: poc.exchanges && poc.exchanges > 1 \n        ? `${poc.exchanges} exchanges on this day: ${poc.combinedContext?.join('; ')}` \n        : poc.context\n    }));\n\n    // Sort by date\n    consolidated.sort((a, b) => a.date.getTime() - b.date.getTime());\n\n    return consolidated;\n  }\n\n  /**\n   * Format POC for display\n   */\n  static formatPOC(poc: PointOfContact): string {\n    if (poc.type === 'pending') {\n      return poc.dateStr;\n    }\n\n    const label = poc.exchanges && poc.exchanges > 1 \n      ? `${poc.type} (${poc.exchanges} exchanges)` \n      : poc.type;\n    \n    return `${label} - ${poc.dateStr}`;\n  }\n\n  /**\n   * Get total exchange count across all POCs\n   */\n  static getTotalExchanges(pocs: PointOfContact[]): number {\n    return pocs.reduce((total, poc) => total + (poc.exchanges || 1), 0);\n  }\n}","import DOMPurify from 'dompurify';\n\n/**\n * Input sanitization module - Prevents XSS and injection attacks\n * All user input must pass through this module\n */\n\nexport class InputSanitizer {\n  private static readonly EMAIL_PATTERN = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  private static readonly DANGEROUS_PATTERNS = [\n    /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\n    /javascript:/gi,\n    /on\\w+\\s*=/gi,\n    /<iframe/gi,\n    /<object/gi,\n    /<embed/gi\n  ];\n\n  /**\n   * Sanitize email content while preserving structure\n   */\n  static sanitizeEmailContent(input: string): string {\n    if (!input || typeof input !== 'string') {\n      return '';\n    }\n\n    // Remove any script tags or dangerous content\n    let sanitized = input;\n    this.DANGEROUS_PATTERNS.forEach(pattern => {\n      sanitized = sanitized.replace(pattern, '');\n    });\n\n    // Preserve email structure but escape HTML\n    sanitized = this.escapeHtml(sanitized);\n\n    return sanitized.trim();\n  }\n\n  /**\n   * Sanitize plain text input\n   */\n  static sanitizeText(input: string): string {\n    if (!input || typeof input !== 'string') {\n      return '';\n    }\n\n    // Use DOMPurify for thorough sanitization\n    const clean = DOMPurify.sanitize(input, {\n      ALLOWED_TAGS: [],\n      ALLOWED_ATTR: [],\n      KEEP_CONTENT: true\n    });\n\n    return clean.trim();\n  }\n\n  /**\n   * Sanitize and validate email address\n   */\n  static sanitizeEmail(email: string): string {\n    const sanitized = this.sanitizeText(email);\n    \n    if (!this.EMAIL_PATTERN.test(sanitized)) {\n      throw new Error('Invalid email format');\n    }\n\n    return sanitized.toLowerCase();\n  }\n\n  /**\n   * Sanitize date input\n   */\n  static sanitizeDate(dateInput: string): string {\n    // Remove any non-date characters\n    const sanitized = dateInput.replace(/[<>\\\"'&]/g, '');\n    return sanitized.trim();\n  }\n\n  /**\n   * Escape HTML entities\n   */\n  private static escapeHtml(str: string): string {\n    const div = document.createElement('div');\n    div.textContent = str;\n    return div.innerHTML;\n  }\n\n  /**\n   * Validate and sanitize student name\n   */\n  static sanitizeStudentName(name: string): string {\n    const sanitized = this.sanitizeText(name);\n    \n    // Ensure reasonable length\n    if (sanitized.length < 1 || sanitized.length > 100) {\n      throw new Error('Invalid name length');\n    }\n\n    // Only allow letters, spaces, hyphens, and apostrophes\n    const cleaned = sanitized.replace(/[^a-zA-Z\\s\\-']/g, '');\n    \n    return cleaned.trim();\n  }\n\n  /**\n   * Sanitize numeric input\n   */\n  static sanitizeNumber(input: string | number, min?: number, max?: number): number {\n    const num = typeof input === 'string' ? parseFloat(input) : input;\n    \n    if (isNaN(num)) {\n      throw new Error('Invalid number');\n    }\n\n    if (min !== undefined && num < min) {\n      throw new Error(`Number must be at least ${min}`);\n    }\n\n    if (max !== undefined && num > max) {\n      throw new Error(`Number must be at most ${max}`);\n    }\n\n    return num;\n  }\n\n  /**\n   * Validate content type based on patterns\n   */\n  static detectContentType(content: string): 'email' | 'task' | 'unknown' {\n    const sanitized = this.sanitizeText(content);\n    \n    // Email patterns\n    const emailPatterns = /@|from:|to:|subject:|sent:|date:/i;\n    if (emailPatterns.test(sanitized)) {\n      return 'email';\n    }\n\n    // Task patterns\n    const taskPatterns = /task|project|deliverable|milestone|complete|implement/i;\n    if (taskPatterns.test(sanitized)) {\n      return 'task';\n    }\n\n    return 'unknown';\n  }\n}","import { create } from 'zustand';\nimport { persist, createJSONStorage } from 'zustand/middleware';\nimport { format } from 'date-fns';\nimport { DateExtractor } from '@/modules/date-extraction';\nimport { POCConsolidator, PointOfContact } from '@/modules/poc-consolidation';\nimport { InputSanitizer } from '@/modules/input-sanitization';\n\n/**\n * Application state management - Single source of truth\n * Handles all state mutations with automatic persistence\n */\n\ninterface WorkflowState {\n  state: 'idle' | 'analyzing' | 'ready' | 'generating' | 'complete';\n  progress: number;\n  message: string;\n}\n\ninterface AppState {\n  // Content\n  universalInput: string;\n  contentType: 'email' | 'task' | 'auto-detect';\n  currentMode: 'auto-detect' | 'email' | 'task';\n  \n  // Email specific\n  detectedPOCs: PointOfContact[];\n  hasLastDate: boolean;\n  \n  // Form data\n  studentName: string;\n  serviceType: string;\n  noteStyle: 'natural' | 'bullets' | 'concise';\n  detailLevel: 'basic' | 'standard' | 'enhanced';\n  language: 'canadian' | 'british';\n  \n  // Task specific\n  startDate: string;\n  endDate: string;\n  totalDaysWorked: number;\n  distributionPattern: 'equal' | 'frontLoaded' | 'backLoaded' | 'ascending' | 'descending';\n  timeOfDay: string;\n  hoursPerDay: number;\n  \n  // Workflow\n  workflow: WorkflowState;\n  \n  // Context for note generation\n  noteContext: {\n    topics: string;\n    questions: string;\n    actions: string;\n    followUp: string;\n    additional: string;\n  } | null;\n  \n  // Draft\n  lastSavedDraft: string;\n  draftTimestamp: string | null;\n  \n  // Actions\n  setUniversalInput: (input: string) => void;\n  setCurrentMode: (mode: 'auto-detect' | 'email' | 'task') => void;\n  analyzeContent: () => void;\n  setStudentName: (name: string) => void;\n  setNoteContext: (context: AppState['noteContext']) => void;\n  generateEntries: () => Promise<string>;\n  clearAll: () => void;\n  restoreDraft: (draft: Partial<AppState>) => void;\n  updateWorkflow: (update: Partial<WorkflowState>) => void;\n}\n\nconst initialState = {\n  universalInput: '',\n  contentType: 'auto-detect' as const,\n  currentMode: 'auto-detect' as const,\n  detectedPOCs: [],\n  hasLastDate: false,\n  studentName: '',\n  serviceType: 'Email Support',\n  noteStyle: 'natural' as const,\n  detailLevel: 'standard' as const,\n  language: 'canadian' as const,\n  startDate: new Date().toISOString().split('T')[0],\n  endDate: new Date().toISOString().split('T')[0],\n  totalDaysWorked: 0,\n  distributionPattern: 'equal' as const,\n  timeOfDay: 'early_morning',\n  hoursPerDay: 5,\n  workflow: {\n    state: 'idle' as const,\n    progress: 0,\n    message: 'Ready for input'\n  },\n  noteContext: null,\n  lastSavedDraft: '',\n  draftTimestamp: null\n};\n\nexport const useAppStore = create<AppState>()(\n  persist(\n    (set, get) => ({\n      ...initialState,\n\n      setUniversalInput: (input: string) => {\n        const sanitized = InputSanitizer.sanitizeEmailContent(input);\n        set({ \n          universalInput: sanitized,\n          draftTimestamp: new Date().toISOString()\n        });\n        \n        // Auto-analyze if content present\n        if (sanitized.trim()) {\n          get().analyzeContent();\n        }\n      },\n\n      setCurrentMode: (mode) => set({ currentMode: mode }),\n\n      analyzeContent: () => {\n        const { universalInput, currentMode } = get();\n        \n        set({\n          workflow: {\n            state: 'analyzing',\n            progress: 30,\n            message: 'Analyzing content...'\n          }\n        });\n\n        // Detect content type\n        let contentType = currentMode;\n        if (currentMode === 'auto-detect') {\n          const detected = InputSanitizer.detectContentType(universalInput);\n          contentType = detected === 'unknown' ? 'task' : detected;\n        }\n\n        if (contentType === 'email') {\n          // Extract dates\n          const dates = DateExtractor.extractDates(universalInput);\n          const hasLastDate = DateExtractor.hasLastDateMarker(universalInput);\n          \n          // Consolidate POCs\n          const pocs = POCConsolidator.consolidate(dates, universalInput, hasLastDate);\n          \n          // Extract student name from email\n          const senderMatch = universalInput.match(/From:\\s*([^<\\n]+)/i);\n          const studentName = senderMatch && senderMatch[1] ? \n            InputSanitizer.sanitizeStudentName(senderMatch[1].trim().split(' ')[0]) : '';\n\n          set({\n            contentType: 'email',\n            detectedPOCs: pocs,\n            hasLastDate,\n            studentName,\n            workflow: {\n              state: 'ready',\n              progress: 60,\n              message: 'Ready to generate'\n            }\n          });\n        } else {\n          set({\n            contentType: 'task',\n            workflow: {\n              state: 'ready',\n              progress: 60,\n              message: 'Ready to generate'\n            }\n          });\n        }\n      },\n\n      setStudentName: (name: string) => {\n        const sanitized = InputSanitizer.sanitizeStudentName(name);\n        set({ studentName: sanitized });\n      },\n\n      setNoteContext: (context) => set({ noteContext: context }),\n\n      generateEntries: async () => {\n        const state = get();\n        \n        set({\n          workflow: {\n            state: 'generating',\n            progress: 80,\n            message: 'Generating entries...'\n          }\n        });\n\n        let output = '';\n\n        if (state.contentType === 'email') {\n          output = generateCaseNotes(state);\n        } else {\n          output = generateTasks(state);\n        }\n\n        set({\n          workflow: {\n            state: 'complete',\n            progress: 100,\n            message: 'Generation complete'\n          }\n        });\n\n        return output;\n      },\n\n      clearAll: () => set(initialState),\n\n      restoreDraft: (draft) => set({ ...draft }),\n\n      updateWorkflow: (update) => set(state => ({\n        workflow: { ...state.workflow, ...update }\n      }))\n    }),\n    {\n      name: 'clockwork-elite-storage',\n      storage: createJSONStorage(() => localStorage),\n      partialize: (state) => ({\n        universalInput: state.universalInput,\n        studentName: state.studentName,\n        noteStyle: state.noteStyle,\n        detailLevel: state.detailLevel,\n        language: state.language,\n        startDate: state.startDate,\n        endDate: state.endDate,\n        totalDaysWorked: state.totalDaysWorked,\n        draftTimestamp: state.draftTimestamp\n      })\n    }\n  )\n);\n\n// Note generation functions (extracted from original)\nfunction generateCaseNotes(state: AppState): string {\n  const { \n    detectedPOCs, \n    studentName, \n    serviceType, \n    noteStyle, \n    // detailLevel,\n    noteContext,\n    universalInput\n  } = state;\n\n  let output = '';\n\n  // Summary header if multiple POCs\n  if (detectedPOCs.length > 1) {\n    output += `// ${detectedPOCs.length} Points of Contact Detected\\n`;\n    output += `// Student: ${studentName}\\n`;\n    output += `// Service: ${serviceType}\\n`;\n    output += '='.repeat(80) + '\\n\\n';\n  }\n\n  detectedPOCs.forEach((poc, index) => {\n    // Skip pending POCs\n    if (poc.type === 'pending') return;\n\n    const hours = '1 hour';\n    output += `${poc.dateStr} | ${serviceType} | ${hours} | Academic Support | ${studentName}\\n\\n`;\n\n    if (noteStyle === 'natural') {\n      output += 'OBJECTIVE:\\n';\n      if (noteContext?.topics) {\n        output += `${studentName} contacted regarding ${noteContext.topics}.`;\n      } else {\n        output += `${studentName} reached out for assistance.`;\n      }\n      if (noteContext?.questions) {\n        output += ` Student inquired about ${noteContext.questions}.`;\n      }\n      output += '\\n\\n';\n\n      output += 'WHAT TRANSPIRED:\\n';\n      if (noteContext?.actions) {\n        output += noteContext.actions;\n      } else {\n        output += `Reviewed the ${poc.type} and provided appropriate response.`;\n      }\n      if (noteContext?.additional) {\n        output += ` ${noteContext.additional}`;\n      }\n      output += '\\n\\n';\n\n      output += 'OUTCOME/PLAN:\\n';\n      if (noteContext?.followUp) {\n        output += noteContext.followUp;\n      } else {\n        output += 'Response provided. Will monitor for any follow-up questions.';\n      }\n      output += '\\n';\n    }\n\n    if (index < detectedPOCs.length - 1) {\n      output += '\\n' + '='.repeat(80) + '\\n\\n';\n    }\n  });\n\n  // Add email verbatim once at the end\n  if (universalInput && detectedPOCs.length > 0) {\n    output += '\\n\\n' + '-'.repeat(80) + '\\n';\n    output += 'ORIGINAL EMAIL:\\n\\n';\n    output += universalInput.trim();\n    output += '\\n' + '-'.repeat(80);\n  }\n\n  return output;\n}\n\nfunction generateTasks(state: AppState): string {\n  const { \n    startDate, \n    endDate, \n    totalDaysWorked, \n    distributionPattern,\n    timeOfDay,\n    hoursPerDay,\n    universalInput,\n    detailLevel\n  } = state;\n\n  const start = new Date(startDate);\n  const end = new Date(endDate);\n  let output = '';\n  let currentDate = new Date(start);\n  let daysGenerated = 0;\n\n  // Extract task context from input\n  const taskContext = extractTaskContext(universalInput);\n\n  while (daysGenerated < totalDaysWorked && currentDate <= end) {\n    // Skip weekends\n    if (currentDate.getDay() !== 0 && currentDate.getDay() !== 6) {\n      const dateStr = format(currentDate, 'MMMM d, yyyy');\n      const hours = calculateHoursForDay(daysGenerated, totalDaysWorked, hoursPerDay, distributionPattern);\n      const timeRange = getTimeRange(timeOfDay, hours);\n      \n      output += `${dateStr} | ${timeRange} | ${hours} hours | ${taskContext.title} | ${taskContext.category}\\n`;\n      \n      // Add bullets based on detail level\n      const bulletCount = detailLevel === 'basic' ? 3 : detailLevel === 'enhanced' ? 7 : 5;\n      const bullets = generateTaskBullets(taskContext, bulletCount);\n      bullets.forEach(bullet => {\n        output += `• ${bullet}\\n`;\n      });\n      \n      output += '\\n';\n      daysGenerated++;\n    }\n    \n    currentDate.setDate(currentDate.getDate() + 1);\n  }\n\n  return output.trim();\n}\n\nfunction extractTaskContext(input: string) {\n  const defaultContext = {\n    title: 'Project Development',\n    category: 'Development',\n    activities: [\n      'Analyzed requirements and specifications',\n      'Implemented features according to design',\n      'Conducted code review and testing',\n      'Updated documentation'\n    ]\n  };\n\n  if (!input) return defaultContext;\n\n  // Extract project name\n  const projectMatch = input.match(/project[:\\s]+([^\\n]+)/i);\n  if (projectMatch && projectMatch[1]) {\n    defaultContext.title = projectMatch[1].trim();\n  }\n\n  // Extract activities\n  const activities: string[] = [];\n  const actionWords = ['developed', 'created', 'implemented', 'designed', 'analyzed', 'reviewed'];\n  actionWords.forEach(word => {\n    const pattern = new RegExp(`${word}\\\\s+([^.]+)`, 'gi');\n    const matches = input.matchAll(pattern);\n    for (const match of matches) {\n      activities.push(match[0]);\n    }\n  });\n\n  if (activities.length > 0) {\n    defaultContext.activities = activities;\n  }\n\n  return defaultContext;\n}\n\nfunction calculateHoursForDay(\n  dayIndex: number, \n  totalDays: number, \n  baseHours: number, \n  pattern: string\n): number {\n  switch (pattern) {\n    case 'frontLoaded':\n      return dayIndex < totalDays / 2 ? baseHours + 1 : baseHours - 1;\n    case 'backLoaded':\n      return dayIndex >= totalDays / 2 ? baseHours + 1 : baseHours - 1;\n    case 'ascending':\n      return Math.min(baseHours + dayIndex * 0.5, 8);\n    case 'descending':\n      return Math.max(baseHours - dayIndex * 0.5, 1);\n    default:\n      return baseHours;\n  }\n}\n\nfunction getTimeRange(timeOfDay: string, hours: number): string {\n  const timeRanges = {\n    'early_morning': { start: 6, name: '6:00 AM' },\n    'morning': { start: 8, name: '8:00 AM' },\n    'midday': { start: 11, name: '11:00 AM' },\n    'afternoon': { start: 13, name: '1:00 PM' },\n    'late_afternoon': { start: 16, name: '4:00 PM' },\n    'evening': { start: 18, name: '6:00 PM' }\n  };\n\n  const range = timeRanges[timeOfDay as keyof typeof timeRanges] || timeRanges.morning;\n  const endHour = range.start + hours;\n  const endTime = endHour > 12 ? `${endHour - 12}:00 PM` : `${endHour}:00 AM`;\n  \n  return `${range.name} - ${endTime}`;\n}\n\nfunction generateTaskBullets(context: any, count: number): string[] {\n  const bullets = [];\n  const available = [...context.activities];\n  \n  // Use real activities first\n  for (let i = 0; i < Math.min(count, available.length); i++) {\n    bullets.push(available[i]);\n  }\n  \n  // Fill with generic if needed\n  const generic = [\n    'Coordinated with team members on deliverables',\n    'Ensured quality standards were met',\n    'Documented progress and outcomes',\n    'Prepared for upcoming milestones'\n  ];\n  \n  while (bullets.length < count) {\n    bullets.push(generic[bullets.length % generic.length]);\n  }\n  \n  return bullets.slice(0, count);\n}","import React from 'react';\n\nexport function Header() {\n  return (\n    <header className=\"header\">\n      <h1>Clockwork Elite</h1>\n      <p className=\"subtitle\">Enterprise Task & Case Note Management System</p>\n    </header>\n  );\n}","import React, { useCallback } from 'react';\nimport { useAppStore } from '@/store/app-store';\nimport { debounce } from '@/utils/debounce';\n\nexport function InputPanel() {\n  const { \n    universalInput, \n    currentMode,\n    workflow,\n    setUniversalInput,\n    setCurrentMode,\n    clearAll\n  } = useAppStore();\n\n  // Debounced input handler\n  const handleInputChange = useCallback(\n    debounce((value: string) => {\n      setUniversalInput(value);\n    }, 300),\n    [setUniversalInput]\n  );\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header\">\n        <h2>Input</h2>\n        <div className=\"flex gap-2\">\n          <button\n            className={`btn ${currentMode === 'auto-detect' ? 'btn-primary' : ''}`}\n            onClick={() => setCurrentMode('auto-detect')}\n          >\n            Auto-Detect\n          </button>\n          <button\n            className={`btn ${currentMode === 'email' ? 'btn-primary' : ''}`}\n            onClick={() => setCurrentMode('email')}\n          >\n            Email Mode\n          </button>\n          <button\n            className={`btn ${currentMode === 'task' ? 'btn-primary' : ''}`}\n            onClick={() => setCurrentMode('task')}\n          >\n            Task Mode\n          </button>\n        </div>\n      </div>\n\n      <div className=\"form-group\">\n        <label className=\"form-label\" htmlFor=\"universal-input\">\n          {currentMode === 'email' ? 'Paste Email Thread' : \n           currentMode === 'task' ? 'Enter Task Description' : \n           'Paste Content or Describe Tasks'}\n        </label>\n        <textarea\n          id=\"universal-input\"\n          className=\"textarea\"\n          placeholder={\n            currentMode === 'email' \n              ? \"Paste the entire email thread here...\"\n              : currentMode === 'task'\n              ? \"Describe the tasks you need to complete...\"\n              : \"Paste email thread or describe tasks...\"\n          }\n          defaultValue={universalInput}\n          onChange={(e) => handleInputChange(e.target.value)}\n          rows={12}\n        />\n        <p className=\"form-help\">\n          {currentMode === 'email' \n            ? \"Include all emails in the thread. The system will extract dates and POCs automatically.\"\n            : currentMode === 'task'\n            ? \"Describe what needs to be done. The system will distribute tasks across business days.\"\n            : \"The system will automatically detect whether this is an email thread or task description.\"}\n        </p>\n      </div>\n\n      <div className=\"flex justify-between items-center\">\n        <div className=\"text-small\">\n          {workflow.state !== 'idle' && (\n            <span>{workflow.message}</span>\n          )}\n        </div>\n        <button \n          className=\"btn\"\n          onClick={clearAll}\n          disabled={!universalInput}\n        >\n          Clear All\n        </button>\n      </div>\n    </div>\n  );\n}","/**\n * Debounce utility for performance optimization\n */\nexport function debounce<T extends (...args: any[]) => any>(\n  fn: T,\n  delay: number\n): (...args: Parameters<T>) => void {\n  let timeoutId: NodeJS.Timeout | null = null;\n\n  return function debounced(...args: Parameters<T>) {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n\n    timeoutId = setTimeout(() => {\n      fn(...args);\n      timeoutId = null;\n    }, delay);\n  };\n}","import React from 'react';\nimport { useAppStore } from '@/store/app-store';\nimport { POCConsolidator } from '@/modules/poc-consolidation';\n\nexport function POCDisplay() {\n  const { detectedPOCs, hasLastDate } = useAppStore();\n\n  if (!hasLastDate) {\n    return (\n      <div className=\"poc-display\">\n        <h3 className=\"text-small mb-2\">Points of Contact</h3>\n        <div className=\"status\">\n          Waiting for last date... Please add: [Last date in response: DATE]\n        </div>\n      </div>\n    );\n  }\n\n  const totalExchanges = POCConsolidator.getTotalExchanges(detectedPOCs);\n\n  return (\n    <div className=\"poc-display\">\n      <h3 className=\"text-small mb-2\">\n        Points of Contact ({detectedPOCs.length} days, {totalExchanges} exchanges)\n      </h3>\n      \n      <div className=\"poc-list\">\n        {detectedPOCs.map(poc => (\n          <div key={poc.id} className=\"poc-item\">\n            <input\n              type=\"checkbox\"\n              id={`poc-${poc.id}`}\n              checked={poc.selected}\n              onChange={() => {\n                // Toggle POC selection\n                const store = useAppStore.getState();\n                const updated = store.detectedPOCs.map(p => \n                  p.id === poc.id ? { ...p, selected: !p.selected } : p\n                );\n                store.restoreDraft({ detectedPOCs: updated });\n              }}\n            />\n            <label htmlFor={`poc-${poc.id}`}>\n              {POCConsolidator.formatPOC(poc)}\n              {poc.isLastDate && ' (Last Response)'}\n            </label>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport { useAppStore } from '@/store/app-store';\n\nexport function FormFields() {\n  const store = useAppStore();\n  const { \n    contentType,\n    studentName,\n    serviceType,\n    noteStyle,\n    detailLevel,\n    language,\n    startDate,\n    endDate,\n    totalDaysWorked,\n    distributionPattern,\n    timeOfDay,\n    hoursPerDay\n  } = store;\n\n  if (contentType === 'email') {\n    return (\n      <div className=\"form-fields\">\n        <div className=\"form-group\">\n          <label className=\"form-label\" htmlFor=\"student-name\">\n            Student Name\n          </label>\n          <input\n            id=\"student-name\"\n            type=\"text\"\n            className=\"input\"\n            value={studentName}\n            onChange={(e) => store.setStudentName(e.target.value)}\n            placeholder=\"Enter student's first name\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label className=\"form-label\" htmlFor=\"service-type\">\n            Service Type\n          </label>\n          <select\n            id=\"service-type\"\n            className=\"select\"\n            value={serviceType}\n            onChange={(e) => store.restoreDraft({ serviceType: e.target.value })}\n          >\n            <option value=\"Email Support\">Email Support</option>\n            <option value=\"Virtual Meeting\">Virtual Meeting</option>\n            <option value=\"Phone Support\">Phone Support</option>\n            <option value=\"In-Person Meeting\">In-Person Meeting</option>\n            <option value=\"Document Review\">Document Review</option>\n            <option value=\"Research Consultation\">Research Consultation</option>\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <label className=\"form-label\" htmlFor=\"note-style\">\n            Note Style\n          </label>\n          <select\n            id=\"note-style\"\n            className=\"select\"\n            value={noteStyle}\n            onChange={(e) => store.restoreDraft({ noteStyle: e.target.value as any })}\n          >\n            <option value=\"natural\">Natural Language</option>\n            <option value=\"bullets\">Bullet Points</option>\n            <option value=\"concise\">Concise</option>\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <label className=\"form-label\" htmlFor=\"detail-level\">\n            Detail Level\n          </label>\n          <select\n            id=\"detail-level\"\n            className=\"select\"\n            value={detailLevel}\n            onChange={(e) => store.restoreDraft({ detailLevel: e.target.value as any })}\n          >\n            <option value=\"basic\">Basic</option>\n            <option value=\"standard\">Standard</option>\n            <option value=\"enhanced\">Enhanced</option>\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <label className=\"form-label\" htmlFor=\"language\">\n            Language Variant\n          </label>\n          <select\n            id=\"language\"\n            className=\"select\"\n            value={language}\n            onChange={(e) => store.restoreDraft({ language: e.target.value as any })}\n          >\n            <option value=\"canadian\">Canadian English</option>\n            <option value=\"british\">British English</option>\n          </select>\n        </div>\n      </div>\n    );\n  }\n\n  // Task mode fields\n  return (\n    <div className=\"form-fields\">\n      <div className=\"form-group\">\n        <label className=\"form-label\" htmlFor=\"start-date\">\n          Start Date\n        </label>\n        <input\n          id=\"start-date\"\n          type=\"date\"\n          className=\"input\"\n          value={startDate}\n          onChange={(e) => store.restoreDraft({ startDate: e.target.value })}\n        />\n      </div>\n\n      <div className=\"form-group\">\n        <label className=\"form-label\" htmlFor=\"end-date\">\n          End Date\n        </label>\n        <input\n          id=\"end-date\"\n          type=\"date\"\n          className=\"input\"\n          value={endDate}\n          onChange={(e) => store.restoreDraft({ endDate: e.target.value })}\n        />\n      </div>\n\n      <div className=\"form-group\">\n        <label className=\"form-label\" htmlFor=\"days-worked\">\n          Total Days to Work\n        </label>\n        <input\n          id=\"days-worked\"\n          type=\"number\"\n          className=\"input\"\n          value={totalDaysWorked}\n          onChange={(e) => store.restoreDraft({ totalDaysWorked: parseInt(e.target.value) || 0 })}\n          min=\"1\"\n          max=\"30\"\n        />\n        <p className=\"form-help\">\n          Business days available: {calculateBusinessDays(startDate, endDate)}\n        </p>\n      </div>\n\n      <div className=\"form-group\">\n        <label className=\"form-label\" htmlFor=\"distribution\">\n          Distribution Pattern\n        </label>\n        <select\n          id=\"distribution\"\n          className=\"select\"\n          value={distributionPattern}\n          onChange={(e) => store.restoreDraft({ distributionPattern: e.target.value as any })}\n        >\n          <option value=\"equal\">Equal Distribution</option>\n          <option value=\"frontLoaded\">Front-Loaded</option>\n          <option value=\"backLoaded\">Back-Loaded</option>\n          <option value=\"ascending\">Ascending Hours</option>\n          <option value=\"descending\">Descending Hours</option>\n        </select>\n      </div>\n\n      <div className=\"form-group\">\n        <label className=\"form-label\" htmlFor=\"time-of-day\">\n          Time of Day\n        </label>\n        <select\n          id=\"time-of-day\"\n          className=\"select\"\n          value={timeOfDay}\n          onChange={(e) => store.restoreDraft({ timeOfDay: e.target.value })}\n        >\n          <option value=\"early_morning\">Early Morning (6-8 AM)</option>\n          <option value=\"morning\">Morning (8-11 AM)</option>\n          <option value=\"midday\">Midday (11 AM-1 PM)</option>\n          <option value=\"afternoon\">Afternoon (1-4 PM)</option>\n          <option value=\"late_afternoon\">Late Afternoon (4-6 PM)</option>\n          <option value=\"evening\">Evening (6-8 PM)</option>\n        </select>\n      </div>\n\n      <div className=\"form-group\">\n        <label className=\"form-label\" htmlFor=\"hours-per-day\">\n          Hours Per Day\n        </label>\n        <input\n          id=\"hours-per-day\"\n          type=\"number\"\n          className=\"input\"\n          value={hoursPerDay}\n          onChange={(e) => store.restoreDraft({ hoursPerDay: parseFloat(e.target.value) || 5 })}\n          min=\"0.5\"\n          max=\"8\"\n          step=\"0.5\"\n        />\n      </div>\n    </div>\n  );\n}\n\nfunction calculateBusinessDays(start: string, end: string): number {\n  const startDate = new Date(start);\n  const endDate = new Date(end);\n  let count = 0;\n  \n  const current = new Date(startDate);\n  while (current <= endDate) {\n    const day = current.getDay();\n    if (day !== 0 && day !== 6) { // Not Sunday or Saturday\n      count++;\n    }\n    current.setDate(current.getDate() + 1);\n  }\n  \n  return count;\n}","import React from 'react';\nimport { useAppStore } from '@/store/app-store';\nimport { POCDisplay } from './POCDisplay';\nimport { FormFields } from './FormFields';\n\ninterface Props {\n  onGenerate: () => void;\n}\n\nexport function AnalysisPanel({ onGenerate }: Props) {\n  const { \n    contentType, \n    workflow,\n    detectedPOCs,\n    studentName,\n    startDate,\n    endDate\n  } = useAppStore();\n\n  const canGenerate = workflow.state === 'ready' && (\n    contentType === 'email' \n      ? detectedPOCs.length > 0 && studentName\n      : startDate && endDate\n  );\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header\">\n        <h2>Analysis & Configuration</h2>\n        <div className=\"text-small\">\n          Detected: <strong>{contentType === 'email' ? 'Email Thread' : 'Task Description'}</strong>\n        </div>\n      </div>\n\n      {contentType === 'email' && <POCDisplay />}\n      \n      <FormFields />\n\n      <div className=\"flex justify-end gap-2 mt-4\">\n        <button \n          className=\"btn btn-primary\"\n          onClick={onGenerate}\n          disabled={!canGenerate}\n        >\n          {workflow.state === 'generating' ? (\n            <>\n              <span className=\"loading mr-2\"></span>\n              Generating...\n            </>\n          ) : (\n            'Generate Entries'\n          )}\n        </button>\n      </div>\n\n      {workflow.state === 'ready' && !canGenerate && (\n        <p className=\"form-help text-center mt-2\">\n          {contentType === 'email' \n            ? 'Please ensure student name is filled and POCs are detected'\n            : 'Please select date range for task distribution'}\n        </p>\n      )}\n    </div>\n  );\n}","import React, { useState } from 'react';\n\ninterface Props {\n  output: string;\n  onClose: () => void;\n}\n\nexport function OutputModal({ output, onClose }: Props) {\n  const [copied, setCopied] = useState(false);\n  const [saved, setSaved] = useState(false);\n\n  const handleCopy = async () => {\n    try {\n      await navigator.clipboard.writeText(output);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 2000);\n    } catch (err) {\n      console.error('Failed to copy:', err);\n    }\n  };\n\n  const handleSave = () => {\n    const blob = new Blob([output], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `clockwork-elite-${new Date().toISOString().split('T')[0]}.txt`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n    \n    setSaved(true);\n    setTimeout(() => setSaved(false), 2000);\n  };\n\n  return (\n    <div className=\"modal-backdrop\" onClick={onClose}>\n      <div className=\"modal\" style={{ maxWidth: '800px' }} onClick={(e) => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h2>Generated Entries</h2>\n          <button className=\"btn\" onClick={onClose}>×</button>\n        </div>\n\n        <div className=\"modal-body\">\n          <div className=\"output-preview\">\n            <pre className=\"text-mono text-small\">{output}</pre>\n          </div>\n        </div>\n\n        <div className=\"modal-footer\">\n          <div className=\"flex gap-2\">\n            <button className=\"btn\" onClick={handleCopy}>\n              {copied ? 'Copied!' : 'Copy to Clipboard'}\n            </button>\n            <button className=\"btn\" onClick={handleSave}>\n              {saved ? 'Saved!' : 'Save as File'}\n            </button>\n          </div>\n          <button className=\"btn btn-primary\" onClick={onClose}>\n            Done\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}","import React, { useState } from 'react';\n\ninterface Props {\n  onSubmit: (context: any) => void;\n  onClose: () => void;\n}\n\nexport function ContextModal({ onSubmit, onClose }: Props) {\n  const [context, setContext] = useState({\n    topics: '',\n    questions: '',\n    actions: '',\n    followUp: '',\n    additional: ''\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    onSubmit(context);\n  };\n\n  return (\n    <div className=\"modal-backdrop\" onClick={onClose}>\n      <div className=\"modal\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h2>Add Context for Case Notes</h2>\n          <button className=\"btn\" onClick={onClose}>×</button>\n        </div>\n\n        <form onSubmit={handleSubmit}>\n          <div className=\"modal-body\">\n            <div className=\"form-group\">\n              <label className=\"form-label\" htmlFor=\"topics\">\n                Main Topics Discussed\n              </label>\n              <input\n                id=\"topics\"\n                type=\"text\"\n                className=\"input\"\n                value={context.topics}\n                onChange={(e) => setContext({ ...context, topics: e.target.value })}\n                placeholder=\"e.g., assignment requirements, research methods\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"form-label\" htmlFor=\"questions\">\n                Student Questions\n              </label>\n              <input\n                id=\"questions\"\n                type=\"text\"\n                className=\"input\"\n                value={context.questions}\n                onChange={(e) => setContext({ ...context, questions: e.target.value })}\n                placeholder=\"e.g., formatting guidelines, citation style\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"form-label\" htmlFor=\"actions\">\n                Actions Taken\n              </label>\n              <textarea\n                id=\"actions\"\n                className=\"textarea\"\n                value={context.actions}\n                onChange={(e) => setContext({ ...context, actions: e.target.value })}\n                placeholder=\"e.g., Reviewed draft, provided feedback on structure\"\n                rows={3}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"form-label\" htmlFor=\"follow-up\">\n                Follow-up Plan\n              </label>\n              <input\n                id=\"follow-up\"\n                type=\"text\"\n                className=\"input\"\n                value={context.followUp}\n                onChange={(e) => setContext({ ...context, followUp: e.target.value })}\n                placeholder=\"e.g., Student will revise and resubmit\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"form-label\" htmlFor=\"additional\">\n                Additional Notes\n              </label>\n              <textarea\n                id=\"additional\"\n                className=\"textarea\"\n                value={context.additional}\n                onChange={(e) => setContext({ ...context, additional: e.target.value })}\n                placeholder=\"Any other relevant information\"\n                rows={2}\n              />\n            </div>\n          </div>\n\n          <div className=\"modal-footer\">\n            <button type=\"button\" className=\"btn\" onClick={onClose}>\n              Cancel\n            </button>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Generate Notes\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}","import React, { Component, ReactNode } from 'react';\n\ninterface Props {\n  children: ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n  error: Error | null;\n  errorInfo: any;\n  retryCount: number;\n}\n\nexport class ErrorBoundary extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null,\n      errorInfo: null,\n      retryCount: 0\n    };\n  }\n\n  static getDerivedStateFromError(error: Error): State {\n    return {\n      hasError: true,\n      error,\n      errorInfo: null,\n      retryCount: 0\n    };\n  }\n\n  componentDidCatch(error: Error, errorInfo: any) {\n    console.error('Error boundary caught:', error, errorInfo);\n    \n    // In production, send to monitoring service\n    if (typeof window !== 'undefined' && window.location.hostname !== 'localhost') {\n      // Log to monitoring service\n    }\n\n    this.setState({\n      error,\n      errorInfo\n    });\n  }\n\n  handleReset = () => {\n    this.setState({\n      hasError: false,\n      error: null,\n      errorInfo: null,\n      retryCount: this.state.retryCount + 1\n    });\n  };\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"error-boundary\">\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h2>Application Error</h2>\n            </div>\n            <div className=\"card-body\">\n              <p className=\"mb-3\">\n                An unexpected error occurred. The application has been stopped to prevent data loss.\n              </p>\n              \n              {this.state.error && (\n                <details className=\"mb-3\">\n                  <summary className=\"cursor-pointer\">Technical Details</summary>\n                  <pre className=\"text-mono text-small mt-2\">\n                    {this.state.error.toString()}\n                    {this.state.errorInfo?.componentStack}\n                  </pre>\n                </details>\n              )}\n\n              <div className=\"flex gap-2\">\n                <button \n                  className=\"btn btn-primary\"\n                  onClick={this.handleReset}\n                >\n                  Try Again\n                </button>\n                <button \n                  className=\"btn\"\n                  onClick={() => window.location.reload()}\n                >\n                  Reload Page\n                </button>\n              </div>\n\n              {this.state.retryCount > 2 && (\n                <p className=\"text-small mt-3\">\n                  Multiple errors detected. Please refresh the page or contact support.\n                </p>\n              )}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}","import React, { useEffect } from 'react';\nimport { useAppStore } from '@/store/app-store';\nimport { Header } from '@/components/Header';\nimport { InputPanel } from '@/components/InputPanel';\nimport { AnalysisPanel } from '@/components/AnalysisPanel';\nimport { OutputModal } from '@/components/OutputModal';\nimport { ContextModal } from '@/components/ContextModal';\nimport { ErrorBoundary } from '@/components/ErrorBoundary';\n\nexport function App() {\n  const workflow = useAppStore(state => state.workflow);\n  const [showOutput, setShowOutput] = React.useState(false);\n  const [showContext, setShowContext] = React.useState(false);\n  const [generatedOutput, setGeneratedOutput] = React.useState('');\n\n  // Auto-save draft every 30 seconds\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const state = useAppStore.getState();\n      if (state.universalInput) {\n        console.log('Auto-saving draft...');\n      }\n    }, 30000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Handle generate button\n  const handleGenerate = async () => {\n    const state = useAppStore.getState();\n    \n    // For email mode, show context modal first\n    if (state.contentType === 'email' && !state.noteContext) {\n      setShowContext(true);\n      return;\n    }\n\n    // Generate entries\n    const output = await state.generateEntries();\n    setGeneratedOutput(output);\n    setShowOutput(true);\n  };\n\n  // Handle context submission\n  const handleContextSubmit = async (context: any) => {\n    const state = useAppStore.getState();\n    state.setNoteContext(context);\n    setShowContext(false);\n    \n    // Now generate with context\n    const output = await state.generateEntries();\n    setGeneratedOutput(output);\n    setShowOutput(true);\n  };\n\n  return (\n    <ErrorBoundary>\n      <div className=\"app\">\n        <Header />\n        \n        <div className=\"container\">\n          <div className=\"main-grid\">\n            <InputPanel />\n            \n            {workflow.state !== 'idle' && (\n              <AnalysisPanel onGenerate={handleGenerate} />\n            )}\n          </div>\n        </div>\n\n        {showOutput && (\n          <OutputModal \n            output={generatedOutput}\n            onClose={() => setShowOutput(false)}\n          />\n        )}\n\n        {showContext && (\n          <ContextModal\n            onSubmit={handleContextSubmit}\n            onClose={() => setShowContext(false)}\n          />\n        )}\n      </div>\n    </ErrorBoundary>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { App } from './App';\nimport './styles/global.css';\nimport './styles/app.css';\n\n// Enterprise error reporting\nwindow.addEventListener('unhandledrejection', (event) => {\n  console.error('Unhandled promise rejection:', event.reason);\n  // In production, send to monitoring service\n});\n\nwindow.addEventListener('error', (event) => {\n  console.error('Global error:', event.error);\n  // In production, send to monitoring service\n});\n\nconst root = document.getElementById('root');\nif (!root) {\n  throw new Error('Root element not found');\n}\n\nReactDOM.createRoot(root).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);"],"names":["m","require$$0","client","createRoot","hydrateRoot","createStoreImpl","createState","state","listeners","Set","setState","partial","replace","nextState","Object","is","previousState","assign","forEach","listener","getState","api","getInitialState","initialState","subscribe","add","delete","destroy","clear","React","objectIs","x","y","useState","useEffect","useLayoutEffect","useDebugValue","checkIfSnapshotChanged","inst","latestGetSnapshot","getSnapshot","value","nextValue","error","shim","window","document","createElement","_useState","forceUpdate","useSyncExternalStoreShim_production","useSyncExternalStore","shimModule","exports","require$$1","useRef","useMemo","withSelector_production","useSyncExternalStoreWithSelector","getServerSnapshot","selector","isEqual","instRef","current","hasValue","memoizedSelector","nextSnapshot","hasMemo","memoizedSnapshot","currentSelection","memoizedSelection","nextSelection","maybeGetServerSnapshot","withSelectorModule","ReactExports","useSyncExternalStoreExports","didWarnAboutEqualityFn","identity","arg","createImpl","createStore","useBoundStore","equalityFn","__vite_import_meta_env__","slice","getServerState","useStore","createJSONStorage","getStorage","options","storage","_e","getItem","name","_a","parse","str2","JSON","str","Promise","then","setItem","newValue","stringify","removeItem","toThenable","fn","input","result","onFulfilled","_onRejected","this","e","_onFulfilled","catch","onRejected","persist","config","baseOptions","set","get","localStorage","serialize","deserialize","partialize","version","merge","persistedState","currentState","hasHydrated","hydrationListeners","finishHydrationListeners","args","thenableSerialize","errorInSync","thenable","serializedValue","savedSetState","configResult","stateFromStorage","hydrate","cb","postRehydrationCallback","onRehydrateStorage","call","bind","storageValue","deserializedStorageValue","migrate","migratedState","_a2","setOptions","newOptions","clearStorage","getOptions","rehydrate","onHydrate","onFinishHydration","oldImpl","_b","migrationResult","migrated","skipHydration","newImpl","DateExtractor","static","extractDates","content","dates","uniqueDates","lastDateMatch","match","dateStr","trim","parsed","parseDate","push","date","formatted","formatDate","context","isLastDate","HEADER_PATTERNS","pattern","matches","matchAll","dateKey","has","today","Date","currentYear","getFullYear","currentMonth","getMonth","lowerStr","toLowerCase","addDays","dayNames","dayIndex","indexOf","daysToAdd","getDay","nextLastMatch","day","dayIdx","todayDay","ordinalMatch","parseInt","addMonths","startOfDay","monthDayMatch","monthStr","monthAbbr","monthIndex","substring","monthDaySlashMatch","month","dayOfWeek","isValid","format","hasLastDateMarker","includes","POCConsolidator","consolidate","hasLastDate","id","now","toString","type","selected","pocs","map","index","pocsByDate","Map","poc","existing","exchanges","combinedContext","consolidated","Array","from","values","join","sort","a","b","getTime","formatPOC","getTotalExchanges","reduce","total","InputSanitizer","sanitizeEmailContent","sanitized","DANGEROUS_PATTERNS","escapeHtml","sanitizeText","DOMPurify","sanitize","ALLOWED_TAGS","ALLOWED_ATTR","KEEP_CONTENT","sanitizeEmail","email","EMAIL_PATTERN","test","Error","sanitizeDate","dateInput","div","textContent","innerHTML","sanitizeStudentName","length","sanitizeNumber","min","max","num","parseFloat","isNaN","detectContentType","universalInput","contentType","currentMode","detectedPOCs","studentName","serviceType","noteStyle","detailLevel","language","startDate","toISOString","split","endDate","totalDaysWorked","distributionPattern","timeOfDay","hoursPerDay","workflow","progress","message","noteContext","lastSavedDraft","draftTimestamp","useAppStore","setUniversalInput","analyzeContent","setCurrentMode","mode","detected","senderMatch","setStudentName","setNoteContext","generateEntries","async","output","repeat","hours","topics","questions","actions","additional","followUp","generateCaseNotes","start","end","currentDate","daysGenerated","taskContext","defaultContext","title","category","activities","projectMatch","word","RegExp","extractTaskContext","calculateHoursForDay","timeRange","getTimeRange","generateTaskBullets","bullet","setDate","getDate","generateTasks","clearAll","restoreDraft","draft","updateWorkflow","update","totalDays","baseHours","Math","timeRanges","early_morning","morning","midday","afternoon","late_afternoon","evening","range","endHour","endTime","count","bullets","available","i","generic","Header","jsxs","className","children","jsx","InputPanel","handleInputChange","useCallback","delay","timeoutId","clearTimeout","setTimeout","debounce","onClick","htmlFor","placeholder","defaultValue","onChange","target","rows","disabled","POCDisplay","totalExchanges","checked","store","updated","p","FormFields","calculateBusinessDays","step","AnalysisPanel","onGenerate","canGenerate","Fragment","OutputModal","onClose","copied","setCopied","saved","setSaved","style","maxWidth","stopPropagation","navigator","clipboard","writeText","err","blob","Blob","url","URL","createObjectURL","href","download","body","appendChild","click","removeChild","revokeObjectURL","ContextModal","onSubmit","setContext","preventDefault","ErrorBoundary","Component","constructor","props","super","hasError","errorInfo","retryCount","getDerivedStateFromError","componentDidCatch","handleReset","render","componentStack","location","reload","App","showOutput","setShowOutput","showContext","setShowContext","generatedOutput","setGeneratedOutput","interval","setInterval","clearInterval","addEventListener","event","root","getElementById","ReactDOM","StrictMode"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7]}